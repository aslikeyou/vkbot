<?php
/**
 * Created by PhpStorm.
 * User: aslikeyou
 * Date: 7/14/15
 * Time: 01:15
 */

namespace App\Exceptions;


use Exception;

class BadResponseException extends \RuntimeException
{
    private $_response;
    /**
     * @var array
     */
    private $response;
    /**
     * @var Exception
     */
    private $previous;

    /**
     * @return mixed
     */
    public function getResponse()
    {
        return $this->_response;
    }

    /**
     * @param mixed $response
     */
    public function setResponse($response)
    {
        $this->_response = $response;
    }

    /**
     * (PHP 5 &gt;= 5.1.0)<br/>
     * Construct the exception. Note: The message is NOT binary safe.
     *
     * @link http://php.net/manual/en/exception.construct.php
     *
     * @param string    $message  [optional] The Exception message to throw.
     * @param array     $response
     * @param int       $code     [optional] The Exception code.
     * @param Exception $previous [optional] The previous exception used for the exception chaining. Since 5.3.0
     */
    public function __construct(
        $message = "",
        $response = [],
        $code = 0,
        Exception $previous = null
    ) {
        $this->response = $response;

        parent::__construct($message, $code,
            $previous); // TODO: Change the autogenerated stub


    }
}